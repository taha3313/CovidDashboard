{"version":3,"sources":["SummaryCard.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","React","createElement","className","title","value","App","locationList","label","activeLocation","setActiveLocation","useState","lastUpdated","setlastUpdated","summaryData","setSummaryData","getSummaryData","useCallback","data","error","console","useEffect","async","currentDate","Date","toLocaleString","getVersion","fetchData","Select","options","onChange","selectedOption","defaultValue","filter","totalCases","totalTests","totalDeaths","totalVaccinated","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"47CAEe,SAASA,EAAKC,GACzB,OACIC,IAAAC,cAAA,OAAKC,UAAU,gBACXF,IAAAC,cAAA,UAAKF,EAAMI,OACXH,IAAAC,cAAA,SAAIF,EAAMK,oBCuFPC,MAtFf,WAEA,MAAMC,EAAe,CACjB,CAAEF,MAAO,KAAMG,MAAO,WACtB,CAAEH,MAAO,KAAMG,MAAO,oBACtB,CAAEH,MAAO,KAAMG,MAAO,YACtB,CAAEH,MAAO,KAAMG,MAAO,iBACtB,CAAEH,MAAO,KAAMG,MAAO,6BACtB,CAAEH,MAAO,KAAMG,MAAO,yBACtB,CAAEH,MAAO,KAAMG,MAAO,eACtB,CAAEH,MAAO,KAAMG,MAAO,WACtB,CAAEH,MAAO,KAAMG,MAAO,WACtB,CAAEH,MAAO,KAAMG,MAAO,wBACtB,CAAEH,MAAO,KAAMG,MAAO,UACtB,CAAEH,MAAO,KAAMG,MAAO,gBACtB,CAAEH,MAAO,KAAMG,MAAO,WAGnBC,EAAgBC,GAAqBC,mBAAS,OAC9CC,EAAaC,GAAkBF,mBAAS,KACxCG,EAAaC,GAAkBJ,mBAAS,IAEzCK,EAAiBC,sBAAY,KAC/B,IACE,GAAuB,WAAnBR,EACF,OAGF,MAAMK,EAAcI,EAAKT,GACzBM,EAAeD,GACf,MAAOK,GACPC,QAAQD,MAAM,+BAAgCA,KAE/C,CAACV,IAoBJ,OAVAY,oBAAU,KACUC,WAChBN,IAVaM,WACf,IACI,MAAMC,EAAc,IAAIC,KACxBX,EAAeU,EAAYE,kBAC7B,MAAON,GACPC,QAAQD,MAAM,+BAAgCA,KAM9CO,IAGFC,IACC,CAACX,EAAgBP,IAIlBR,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAA,OAAKC,UAAU,uBACfF,IAAAC,cAAA,OAAKC,UAAU,mBACXF,IAAAC,cAAC0B,IAAM,CACLC,QAAStB,EACTuB,SAAWC,GACTrB,EAAkBqB,EAAe1B,OAEnC2B,aAAczB,EAAa0B,OACxBJ,GAAYA,EAAQxB,QAAUI,GAEjCN,UAAU,qBAEZF,IAAAC,cAAA,KAAGC,UAAU,eAAc,kBACTS,IAGpBX,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAACH,EAAI,CAACK,MAAM,cAAcC,MAAOS,EAAYoB,aAC7CjC,IAAAC,cAACH,EAAI,CAACK,MAAM,cAAcC,MAAOS,EAAYqB,aAC7ClC,IAAAC,cAACH,EAAI,CAACK,MAAM,eAAeC,MAAOS,EAAYsB,cAC9CnC,IAAAC,cAACH,EAAI,CACHK,MAAM,mBACNC,MAAOS,EAAYuB,sBCzEhBC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtD,IAAAC,cAACD,IAAMuD,WAAU,KACfvD,IAAAC,cAACI,EAAG,QAORgC","file":"static/js/main.449014b5.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Card(props) {\n    return (\n        <div className=\"summary-card\">\n            <h2>{props.title}</h2>\n            <p>{props.value}</p>\n        </div>\n    );\n}\n","// App.js\nimport \"./App.css\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Select from \"react-select\";\nimport Card from \"./SummaryCard\";\nimport data from \"./data.json\"; // Import the data.json file\n\nfunction App() {\n// App component starts here\nconst locationList = [\n    { value: \"AB\", label: \"Alberta\" },\n    { value: \"BC\", label: \"British Columbia\" },\n    { value: \"MB\", label: \"Manitoba\" },\n    { value: \"NB\", label: \"New Brunswick\" },\n    { value: \"NL\", label: \"Newfoundland and Labrador\" },\n    { value: \"NT\", label: \"Northwest Territories\" },\n    { value: \"NS\", label: \"Nova Scotia\" },\n    { value: \"NU\", label: \"Nunavut\" },\n    { value: \"ON\", label: \"Ontario\" },\n    { value: \"PE\", label: \"Prince Edward Island\" },\n    { value: \"QC\", label: \"Quebec\" },\n    { value: \"SK\", label: \"Saskatchewan\" },\n    { value: \"YT\", label: \"Yukon\" },\n  ];\n\nconst [activeLocation, setActiveLocation] = useState(\"AB\");\nconst [lastUpdated, setlastUpdated] = useState(\"\");\nconst [summaryData, setSummaryData] = useState({});\n\nconst getSummaryData = useCallback(() => {\n    try {\n      if (activeLocation === \"canada\") {\n        return;\n      }\n\n      const summaryData = data[activeLocation];\n      setSummaryData(summaryData);\n    } catch (error) {\n      console.error(\"Error fetching summary data:\", error);\n    }\n  }, [activeLocation]);\n\nconst getVersion = async () => {\n    try {\n        const currentDate = new Date();\n        setlastUpdated(currentDate.toLocaleString());\n    } catch (error) {\n      console.error(\"Error fetching version data:\", error);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      getSummaryData();\n      getVersion();\n    };\n\n    fetchData();\n  }, [getSummaryData, activeLocation]);\n\n//return statement goes below this\n  return (\n    <div className=\"App\">\n      <h1>COVID 19 Dashboard </h1>\n      <div className=\"dashboard-container\">\n      <div className=\"dashboard-menu \">\n          <Select\n            options={locationList}\n            onChange={(selectedOption) =>\n              setActiveLocation(selectedOption.value)\n            }\n            defaultValue={locationList.filter(\n              (options) => options.value === activeLocation\n            )}\n            className=\"dashboard-select\"\n          />\n          <p className=\"update-date\">\n            Last Updated : {lastUpdated}\n          </p>\n        </div>\n        <div className=\"dashboard-summary\">\n          <Card title=\"Total Cases\" value={summaryData.totalCases} />\n          <Card title=\"Total Tests\" value={summaryData.totalTests} />\n          <Card title=\"Total Deaths\" value={summaryData.totalDeaths} />\n          <Card\n            title=\"Total Vaccinated\"\n            value={summaryData.totalVaccinated}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}